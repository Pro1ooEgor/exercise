# O(n2)
# обменная сортировка
# Обходим массив, попутно меняя местами неотсортированные соседние элементы.
# В результате первого прохода на последнее место «всплывёт» макс. элемент.
# Теперь снова обходим неотсортированную часть массива (от первого элемента
# до предпоследнего) и меняем по пути неотсортированных соседей.
# Второй по величине элемент окажется на предпоследнем месте.
# Продолжая в том же духе, будем обходить всё уменьшающуюся неотсортированную
# часть массива, запихивая найденные максимумы в конец.


def bubble(data):
    n = 1
    while n < len(data):
        for i in range(len(data) - n):
            if data[i] > data[i + 1]:
                data[i], data[i + 1] = data[i + 1], data[i]
        print(f'li: {data}')
        n += 1
    return data


li = [6, 5, 3, 1, 8, 7, 2, 4]
print(bubble(li))
